package text.section04;

public class data7 {

	public static void main(String[] args) {
		System.out.println(45 + 1.8);
		System.out.println(3 - 1.2);
		System.out.println(15 * 0.6);
		System.out.println(3 / 0.3);
		System.out.println(45 % 0.8);

	}

}


/*
 実行結果からして、通常は45を0.8で割った余りは0.2だけど
 結果に若干のズレがある
 これは浮動小数点型は誤差が生じる場合があって
 そもそも0.8はプログラム上は「0.8のおおよその数値」として扱われる
 厳密には0.8ではないため「45 % 0.8」の結果も少しズレてしまう。
 
 例えば99.9という少数はコンピューター内部的には99.9000000000000　のような
 おおよそ数値となっている
 要はコンピューターは少数の扱いが苦手ということ
 
 消費税の計算など正確な結果が求められる場面では、浮動小数点型をそのまま使う事はできない
 誤差を切り捨てるなどといった専用の処理が必要になってくる
 
 多少の誤差が書字ても問題ない場面（大まかな平均値が必要な場合など）では、浮動小数点は便利
 浮動小数点型は誤差が生じる場合があるという認識でおｋ
 
 
 
 
 
 
 
 */